@namespace GradeBookApp.Components.Layout

@using System.Security.Claims
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

@if (user.Identity?.IsAuthenticated ?? false)
{
    <header class="navbar navbar-expand-lg mb-4" style="background-color: #f39c12;">
        <div class="container-fluid">
            <a class="navbar-brand text-white fw-bold" href="/">GradeBookApp</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent"
                    aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    @if (user.IsInRole("Admin"))
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="adminDropdown" role="button" data-bs-toggle="dropdown">
                                Admin
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/admin/dashboard">Dashboard</a></li>
                                <li><a class="dropdown-item" href="/admin/dashboard/classes">Klasy</a></li>
                                <li><a class="dropdown-item" href="/admin/dashboard/subjects">Przedmioty</a></li>
                                <li><a class="dropdown-item" href="/admin/dashboard/users">Użytkownicy</a></li>
                                <li><a class="dropdown-item" href="/admin/db">Baza danych</a></li>
                            </ul>
                        </li>
                    }
                    else if (user.IsInRole("Teacher"))
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="teacherDropdown" role="button" data-bs-toggle="dropdown">
                                Nauczyciel
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/teacher/dashboard">Dashboard</a></li>
                                <li><a class="dropdown-item" href="/teacher/classes">Moje klasy</a></li>
                            </ul>
                        </li>
                    }
                    else if (user.IsInRole("Student"))
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="studentDropdown" role="button" data-bs-toggle="dropdown">
                                Uczeń
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/student/dashboard">Dashboard</a></li>
                                <li><a class="dropdown-item" href="/student/grades">Moje oceny</a></li>
                            </ul>
                        </li>
                    }
                </ul>

                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#" @onclick="Logout">Wyloguj</a>
                    </li>
                </ul>
            </div>
        </div>
    </header>
}

@code {
    private ClaimsPrincipal user = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        user = authState.User;
    }

    private async Task Logout()
    {
        NavigationManager.NavigateTo("/account/logout", forceLoad: true);
    }
}

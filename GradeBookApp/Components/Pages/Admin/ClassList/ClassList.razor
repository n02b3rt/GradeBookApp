@attribute [Authorize(Roles = "Admin")]
@page "/admin/dashboard/classes"
@rendermode InteractiveServer
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

@using GradeBookApp.Shared
@using Microsoft.AspNetCore.Authorization

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-secondary">
            📚 Lista klas
        </h2>
        <button @onclick="ShowAddClass" class="btn btn-warning text-white fw-semibold shadow-sm">
            ➕ Dodaj klasę
        </button>
    </div>

    @if (classes == null)
    {
        <div class="text-muted">⏳ Ładowanie danych klas...</div>
    }
    else if (classes.Count == 0)
    {
        <div class="alert alert-info shadow-sm">Brak dostępnych klas.</div>
    }
    else
    {
        <div class="table-responsive shadow rounded">
            <table class="table table-bordered table-hover align-middle">
                <thead class="table-light">
                <tr>
                    <th scope="col">📘 Nazwa</th>
                    <th scope="col">📅 Rok</th>
                    <th scope="col">👨‍🏫 Wychowawca</th>
                    <th scope="col" class="text-end">⚙️ Akcje</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var c in classes)
                {
                    <tr>
                        <td>@c.Name</td>
                        <td>@c.Year</td>
                        <td>
                            @if (c.Teacher != null)
                            {
                                @c.Teacher.FullName
                            }
                            else
                            {
                                <span class="text-muted fst-italic">brak</span>
                            }
                        </td>
                        <td class="text-end">
                            <button @onclick="() => EditClass(c.Id)" class="btn btn-sm btn-outline-primary me-2">
                                ✏️ Edytuj
                            </button>
                            <button @onclick="() => DeleteClass(c.Id)" class="btn btn-sm btn-outline-danger">
                                🗑️ Usuń
                            </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<ClassDto>? classes;

    protected override async Task OnInitializedAsync()
    {
        await ReloadClasses();
    }

    private async Task ReloadClasses()
    {
        classes = await Http.GetFromJsonAsync<List<ClassDto>>("api/classes");
    }

    private void ShowAddClass()
    {
        Navigation.NavigateTo("/admin/dashboard/classes/add");
    }

    private void EditClass(int id)
    {
        Navigation.NavigateTo($"/admin/dashboard/classes/edit/{id}");
    }

    private async Task DeleteClass(int id)
    {
        var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Usunąć klasę?");
        if (!confirmed) return;

        var resp = await Http.DeleteAsync($"api/classes/{id}");
        if (resp.IsSuccessStatusCode)
        {
            await ReloadClasses();
        }
    }
}

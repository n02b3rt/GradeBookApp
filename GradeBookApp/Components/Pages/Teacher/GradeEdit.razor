@page "/teacher/grades/edit/{GradeId:int}"
@rendermode InteractiveServer
@using GradeBookApp.Services
@using GradeBookApp.Shared
@inject TeacherActionsService TeacherService
@inject NavigationManager Navigation

<div class="container mt-4">
    <h2 class="mb-4 text-warning"><i class="bi bi-pencil-square"></i> Edytuj ocenę</h2>

    @if (grade is null)
    {
        <div class="alert alert-danger">Nie znaleziono oceny.</div>
    }
    else
    {
        <EditForm Model="grade" OnValidSubmit="SaveGrade">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Wartość oceny</label>
                <InputNumber class="form-control" @bind-Value="grade.Value" min="1" max="6" />
            </div>
            <div class="mb-3">
                <label class="form-label">Waga</label>
                <InputNumber class="form-control" @bind-Value="grade.Weight" min="1" max="10" />
            </div>
            <div class="mb-3">
                <label class="form-label">Opis</label>
                <InputText class="form-control" @bind-Value="grade.Description" />
            </div>
            <div class="mb-3">
                <label class="form-label">Data wystawienia</label>
                <InputDate class="form-control" @bind-Value="grade.DateGiven" />
            </div>

            <button type="submit" class="btn btn-success me-2">
                <i class="bi bi-save"></i> Zapisz zmiany
            </button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">
                <i class="bi bi-x-circle"></i> Anuluj
            </button>
        </EditForm>
    }
</div>

@code {
    [Parameter] public int GradeId { get; set; }

    private GradeDto? grade;

    protected override async Task OnInitializedAsync()
    {
        grade = await TeacherService.GetGradeByIdAsync(GradeId);
    }

    private async Task SaveGrade()
    {
        if (grade is not null)
        {
            await TeacherService.UpdateGradeAsync(grade);
            Navigation.NavigateTo($"/teacher/class/{grade.ClassId}/students");
        }
    }

    private void Cancel()
    {
        if (grade is not null)
        {
            Navigation.NavigateTo($"/teacher/class/{grade.ClassId}/students");
        }
        else
        {
            Navigation.NavigateTo("/teacher/classes");
        }
    }
}
